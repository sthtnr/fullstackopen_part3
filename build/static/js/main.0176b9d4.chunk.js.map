{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["Filter","searchName","setSearchName","value","onChange","event","target","baseUrl","axios","get","then","res","data","newObject","post","id","delete","put","PersonForm","persons","setPersons","newName","setNewName","newNumber","setNewNumber","DisplayMessage","onSubmit","preventDefault","person","name","number","copy","find","obj","undefined","window","confirm","personService","returnedPerson","map","some","alert","concat","catch","err","response","error","type","Persons","filter","i","includes","toLowerCase","key","onClick","Notification","isErr","message","className","App","useState","setMessage","setIsErr","useEffect","initialPersons","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0176b9d4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ searchName, setSearchName }) => {\n  const handleSearchNameChange = event => {\n    setSearchName(event.target.value);\n  };\n\n  return (\n    <div>\n      <p>\n        filter shown with\n        <input value={searchName} onChange={handleSearchNameChange} />\n      </p>\n    </div>\n  );\n};\n\nexport default Filter;\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => res.data)\n}\n\nconst create = newObject => {\n  const req = axios.post(baseUrl, newObject)\n  return req.then(res => res.data)\n}\n\nconst update = (id, newObject) => {\n  const req = axios.put(`${baseUrl}/${id}`, newObject)\n  return req.then(res => res.data)\n}\n\nconst deletes = id => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then(res => res.data)\n}\n\nexport default { getAll, create, deletes, update }\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst PersonForm = ({\n  persons,\n  setPersons,\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n  DisplayMessage,\n}) => {\n  const handleSubmit = event => {\n    event.preventDefault()\n    const person = { name: newName, number: newNumber }\n\n    const ExistSameData = obj =>\n      obj.name === person.name && obj.number === person.number\n\n    const ExistSameName = obj =>\n      obj.name === person.name && obj.number !== person.number\n\n    const copy = persons.find(ExistSameName)\n\n    if (copy !== undefined) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        personService.update(copy.id, person).then(returnedPerson => {\n          setPersons(\n            persons.map(person =>\n              person.id !== copy.id ? person : returnedPerson\n            )\n          )\n          DisplayMessage(\n            false,\n            `Successfully Number changed about ${person.name}`\n          )\n        })\n      }\n    } else if (persons.some(ExistSameData) === true) {\n      alert(`${newName} is alreadey added to phonebook`)\n    } else {\n      personService\n        .create(person)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          DisplayMessage(false, `Successfully Added ${newName}`)\n        })\n        .catch(err => DisplayMessage(true, err.response.data.error))\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst Persons = ({ persons, setPersons, searchName, DisplayMessage }) => {\n  const isMatch = i =>\n    i.name.includes(searchName) || i.name.toLowerCase().includes(searchName)\n\n  const handleClick = (name, id) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService\n        .deletes(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        .catch(error => {\n          DisplayMessage(\n            true,\n            `Information of ${name} has already been removed from server`\n          )\n        })\n    }\n  }\n\n  return (\n    <ul>\n      {persons.filter(isMatch).map(person => (\n        <li key={person.id}>\n          {person.name} {person.number}\n          <button onClick={() => handleClick(person.name, person.id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default Persons\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Notification = ({ isErr, message }) => {\n  if (message === null) {\n    return null\n  }\n  if (isErr) {\n    return <div className=\"error\">{message}</div>\n  }\n  return <div className=\"success\">{message}</div>\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [searchName, setSearchName] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [message, setMessage] = useState(null)\n  const [isErr, setIsErr] = useState(false)\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const DisplayMessage = (isErr, message) => {\n    setMessage(message)\n    setIsErr(isErr)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification isErr={isErr} message={message} />\n\n      <Filter searchName={searchName} setSearchName={setSearchName} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        DisplayMessage={DisplayMessage}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons\n        persons={persons}\n        setPersons={setPersons}\n        searchName={searchName}\n        DisplayMessage={DisplayMessage}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}